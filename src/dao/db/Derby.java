package dao;

import java.sql.*;

public final class Derby {
    private static final String URL = "jdbc:derby:taskdb;create=true";
    private static Derby INSTANCE;

    private Derby() {
        try {
            try (Connection c = DriverManager.getConnection(URL)) {
                ensureSchema(c);
                ensurePriorityColumn(c);
            }
        } catch (Exception e) {
            throw new RuntimeException("Derby init failed", e);
        }
    }

    public static synchronized Derby instance() {
        if (INSTANCE == null) INSTANCE = new Derby();
        return INSTANCE;
    }

    public Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL);
    }

    private static void ensureSchema(Connection c) throws SQLException {
        // טבלה בסיסית (ללא priority) – אם כבר קיימת, נתעלם מהשגיאה
        final String create = """
                CREATE TABLE tasks (
                  id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
                  title VARCHAR(255) NOT NULL,
                  description CLOB,
                  state VARCHAR(40) NOT NULL,
                  PRIMARY KEY (id)
                )
                """;
        try (Statement s = c.createStatement()) {
            s.executeUpdate(create);
        } catch (SQLException e) {
            // X0Y32 = already exists
            if (!"X0Y32".equals(e.getSQLState())) throw e;
        }
    }

    /** אם חסרה עמודת PRIORITY נוסיף אותה – DEFAULT 'NONE' NOT NULL */
    private static void ensurePriorityColumn(Connection c) throws SQLException {
        DatabaseMetaData md = c.getMetaData();
        try (ResultSet rs = md.getColumns(null, null, "TASKS", "PRIORITY")) {
            if (rs.next()) return; // קיימת
        }
        try (Statement s = c.createStatement()) {
            s.executeUpdate("ALTER TABLE tasks ADD COLUMN priority VARCHAR(10) DEFAULT 'NONE' NOT NULL");
        }
    }
}
